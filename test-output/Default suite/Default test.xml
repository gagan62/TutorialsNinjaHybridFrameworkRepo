<?xml version="1.0" encoding="UTF-8"?>
<!-- Generated by org.testng.reporters.JUnitXMLReporter -->
<testsuite ignored="0" hostname="DESKTOP-86C7DGP" failures="0" tests="5" name="Default test" time="0.051" errors="0" timestamp="2023-05-29T16:33:36 EDT">
  <testcase classname="com.tutorialninja.qa.testcases.Login" name="@BeforeMethod setup" time="0.003">
    <failure type="java.lang.NullPointerException" message="Cannot invoke &amp;quot;String.equals(Object)&amp;quot; because &amp;quot;browserName&amp;quot; is null">
      <![CDATA[java.lang.NullPointerException: Cannot invoke "String.equals(Object)" because "browserName" is null
at com.tutorialninja.qa.base.Base.initialiseBrowserAndOpenApplication(Base.java:31)
at com.tutorialninja.qa.testcases.Login.setup(Login.java:24)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
at java.base/java.lang.reflect.Method.invoke(Method.java:568)
at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:133)
at org.testng.internal.MethodInvocationHelper.invokeMethodConsideringTimeout(MethodInvocationHelper.java:62)
at org.testng.internal.ConfigInvoker.invokeConfigurationMethod(ConfigInvoker.java:385)
at org.testng.internal.ConfigInvoker.invokeConfigurations(ConfigInvoker.java:321)
at org.testng.internal.TestInvoker.runConfigMethods(TestInvoker.java:700)
at org.testng.internal.TestInvoker.invokeMethod(TestInvoker.java:527)
at org.testng.internal.TestInvoker.invokeTestMethod(TestInvoker.java:173)
at org.testng.internal.MethodRunner.runInSequence(MethodRunner.java:46)
at org.testng.internal.TestInvoker$MethodInvocationAgent.invoke(TestInvoker.java:824)
at org.testng.internal.TestInvoker.invokeTestMethods(TestInvoker.java:146)
at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:146)
at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:128)
at java.base/java.util.ArrayList.forEach(ArrayList.java:1511)
at org.testng.TestRunner.privateRun(TestRunner.java:794)
at org.testng.TestRunner.run(TestRunner.java:596)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:377)
at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:371)
at org.testng.SuiteRunner.privateRun(SuiteRunner.java:332)
at org.testng.SuiteRunner.run(SuiteRunner.java:276)
at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:53)
at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:96)
at org.testng.TestNG.runSuitesSequentially(TestNG.java:1212)
at org.testng.TestNG.runSuitesLocally(TestNG.java:1134)
at org.testng.TestNG.runSuites(TestNG.java:1063)
at org.testng.TestNG.run(TestNG.java:1031)
at org.testng.remote.AbstractRemoteTestNG.run(AbstractRemoteTestNG.java:115)
at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:251)
at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:77)
]]>
    </failure>
  </testcase> <!-- @BeforeMethod setup -->
  <testcase classname="com.tutorialninja.qa.testcases.Login" name="@AfterMethod tearDown" time="-1.685392416663E9">
    <skipped/>
  </testcase> <!-- @AfterMethod tearDown -->
  <testcase classname="com.tutorialninja.qa.testcases.Login" name="@BeforeMethod setup" time="-1.685392416666E9">
    <skipped/>
  </testcase> <!-- @BeforeMethod setup -->
  <testcase classname="com.tutorialninja.qa.testcases.Login" name="@AfterMethod tearDown" time="-1.685392416669E9">
    <skipped/>
  </testcase> <!-- @AfterMethod tearDown -->
  <testcase classname="com.tutorialninja.qa.testcases.Login" name="@BeforeMethod setup" time="-1.68539241667E9">
    <skipped/>
  </testcase> <!-- @BeforeMethod setup -->
  <testcase classname="com.tutorialninja.qa.testcases.Login" name="@AfterMethod tearDown" time="-1.685392416672E9">
    <skipped/>
  </testcase> <!-- @AfterMethod tearDown -->
  <testcase classname="com.tutorialninja.qa.testcases.Login" name="@BeforeMethod setup" time="-1.685392416673E9">
    <skipped/>
  </testcase> <!-- @BeforeMethod setup -->
  <testcase classname="com.tutorialninja.qa.testcases.Login" name="@AfterMethod tearDown" time="-1.685392416675E9">
    <skipped/>
  </testcase> <!-- @AfterMethod tearDown -->
  <testcase classname="com.tutorialninja.qa.testcases.Login" name="@BeforeMethod setup" time="-1.685392416677E9">
    <skipped/>
  </testcase> <!-- @BeforeMethod setup -->
  <testcase classname="com.tutorialninja.qa.testcases.Login" name="@AfterMethod tearDown" time="-1.685392416679E9">
    <skipped/>
  </testcase> <!-- @AfterMethod tearDown -->
  <testcase classname="com.tutorialninja.qa.testcases.Login" name="verifyLoginWithValidCredentials" time="0.0">
    <skipped/>
  </testcase> <!-- verifyLoginWithValidCredentials -->
  <testcase classname="com.tutorialninja.qa.testcases.Login" name="verifyLoginWithInvalidCredentials" time="0.0">
    <skipped/>
  </testcase> <!-- verifyLoginWithInvalidCredentials -->
  <testcase classname="com.tutorialninja.qa.testcases.Login" name="verifyLoginWithInvalidEmailValidPassword" time="0.0">
    <skipped/>
  </testcase> <!-- verifyLoginWithInvalidEmailValidPassword -->
  <testcase classname="com.tutorialninja.qa.testcases.Login" name="verifyLoginWithValidEmailInvalidPassword" time="0.0">
    <skipped/>
  </testcase> <!-- verifyLoginWithValidEmailInvalidPassword -->
  <testcase classname="com.tutorialninja.qa.testcases.Login" name="verifyLoginWithoutProvidingCredentials" time="0.0">
    <skipped/>
  </testcase> <!-- verifyLoginWithoutProvidingCredentials -->
</testsuite> <!-- Default test -->
